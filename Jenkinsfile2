node {
   stage('Clone Code') { // for display purposes
      // Get some code from a GitHub repository
      git 'https://github.com/trautonen/coveralls-maven-plugin.git/'
   }
   stage('Code Analysis') {
   	   withEnv(["PATH+MAVEN=${tool 'm3'}/bin"]) {
	      sh "mvn clean"
          // sh "infer -- mvn compile"
	   }
   }
   stage('Testing') {
       withEnv(["PATH+MAVEN=${tool 'm3'}/bin"]) {
          sh "mvn test"
       }
       
       junit 'target/surefire-reports/TEST-*.xml'
   }
   
   stage('Package') {
       withEnv(["PATH+MAVEN=${tool 'm3'}/bin"]) {
          sh "mvn -Dmaven.test.skip=true package"
       }
       
       archive 'target/*.jar'
   }
   stage('Deploy') {
       echo 'pipeline success'
   }
   
   //QA click the promotion star and simply click "approve" on it
	stage('approve')
	{
		timeout(time: 5, unit: 'MINUTES') {
		     input message: 'Do you want to deploy?', submitter: 'ops'
		}
	}
	
	stage('Deploy service') {
        sh 'kubectl -s http://192.168.17.137:8080 create -f https://raw.githubusercontent.com/haosimentu/simple-maven-project-with-tests/master/service.yml'
    }
    
    stage('Deploy deployment') {
        sh 'kubectl -s http://192.168.17.137:8080 create -f https://raw.githubusercontent.com/haosimentu/simple-maven-project-with-tests/master/deploy.yml'
    }
    
	post { 
	    always { 
	        echo 'I will always say Hello again!'
	    }
	}
	
	stage('build Image')
	{
	 	container = docker.build("${registry_host_port}/mytest/docker-jenkins-pipeline-test:${env.BUILD_NUMBER}",'.')
	}
	
	stage('Pushing image to registry')
 	{
 		container.push()
 	}
}